Module personnalisé, exemple: tools
Module natif (core, built-in), exemple: random, platform, os
Module communautaire: pypi.org
pip: gestionnaire de packages

Langage procédural: C
Langage orienté objet: Java, C++
Langage multi-paradigme: procédural, oo - Python, JavaScript, PHP (OO, depuis 5.3)

POO => création des classes (classifier/organiser)

Classe => objets
Classe: plan de construction
objet: comme objet fini

Classe Student

M1 <=> M2 #machine

HTTP (protocole de communication, haut niveau 7)

Serveur HTTP (Serveur Web) <=> Chrome

Apache est un serveur HTTP; Chrome est un client HTTP, mais un client HTTP n'est pas forcemet un navigateur web
HTTP: protocole
HTML: c'est un Langage descriptif et de structuration
http://httpstatuses.com = Pour avoir tous les codes des statuses http

Serveur HTTP (Serveur Web) <=> Client HTTP

Apache <=> Chrome

Méthodes HTTP : GET, POST

METHOD URL
GET https://pypi.org/project/requests/

Request
  URL
  Method
  Headers
  (Body)

Response
  Status Code: 200, 404, 301, 401
  Headers
  Body

Webdev
  Front (end): HTML, CSS, JavaScript (react, angular, vuejs)
  Back (end): Java, PHP, Python, JavaScript
  Full-Stack: Front + Back